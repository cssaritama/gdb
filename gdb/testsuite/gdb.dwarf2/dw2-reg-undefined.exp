# Copyright 2013 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
load_lib dwarf.exp

# This test can only be run on targets which support DWARF-2 and use gas.
if {![dwarf2_support]} {
    return 0
}

# This test can only be run on x86_64 targets.
if {![istarget "x86_64-*-*"] || ![is_lp64_target]} {
    return 0
}

standard_testfile .S

if { [prepare_for_testing $testfile.exp $testfile $srcfile {nodebug}] } {
    return -1
}

if ![runto stop_frame] {
    perror "Failed to stop in stop_frame"
    return -1
}

gdb_test "bt" "#0  (0x\[0-9a-f\]+ in )?stop_frame \[^\r\n\]*\r\n#1  \[^\r\n\]*first_frame \[^\r\n\]*\r\n#2  \[^\r\n\]*main\[^\r\n\]*" \
    "backtrace from stop_frame"

for {set f 0} {$f < 3} {incr f} {
    if {${f} == 0} {
	set pattern_rax_rbx_rcx_print "$hex"
	set pattern_rax_rbx_rcx_info "$hex\\s+$decimal"
	set pattern_r8_r9_print "$hex"
	set pattern_r8_r9_info "$hex\\s+$decimal"
	set pattern_r12_r15_print "$hex"
	set pattern_r12_r15_info "$hex\\s+$decimal"
    } else {
	# Even though rbx is callee-saved, these are all explicitly
	# marked undefined in the debug info.
	set pattern_rax_rbx_rcx_print "<not saved>"
	set pattern_rax_rbx_rcx_info "<not saved>"

	# ABI specifies these as caller-saved.  GDB should be
	# implicitly aware they're not saved, even if the debug info
	# doesn't explicitly say so (and also doesn't say they were
	# actually saved).
	set pattern_r8_r9_print "<not saved>"
	set pattern_r8_r9_info "<not saved>"

	# ABI specifies these as callee-saved.
	set pattern_r12_r15_print "$hex"
	set pattern_r12_r15_info "$hex\\s+$decimal"
    }

    # Select frame.
    gdb_test "frame ${f}" "#${f}.*" "Switch to frame ${f}"

    gdb_test "p/x \$rax" ".*$pattern_rax_rbx_rcx_print.*" \
	"print \$rax in frame ${f}"
    gdb_test "p/x \$rbx" "$pattern_rax_rbx_rcx_print" \
	"print \$rbx in frame ${f}"
    gdb_test "p/x \$rcx" "$pattern_rax_rbx_rcx_print" \
	"print \$rcx in frame ${f}"

    gdb_test "p/x \$r8" "$pattern_r8_r9_print" "print \$r8 in frame ${f}"
    gdb_test "p/x \$r9" "$pattern_r8_r9_print" "print \$r9 in frame ${f}"

    gdb_test "p/x \$r12" "$pattern_r12_r15_print" "print \$r12 in frame ${f}"
    gdb_test "p/x \$r15" "$pattern_r12_r15_print" "print \$r15 in frame ${f}"

    # Display register values.
    send_gdb "info registers rax rbx rcx r8 r9 r12 r15\n"
    gdb_expect_list "info registers in frame ${f}" "$gdb_prompt $" \
	[list \
	     "rax\\s+$pattern_rax_rbx_rcx_info\r\n" \
	     "rbx\\s+$pattern_rax_rbx_rcx_info\r\n" \
	     "rcx\\s+$pattern_rax_rbx_rcx_info\r\n" \
	     "r8\\s+$pattern_r8_r9_info\r\n" \
	     "r9\\s+$pattern_r8_r9_info\r\n" \
	     "r12\\s+$pattern_r12_r15_info\r\n" \
	     "r15\\s+$pattern_r12_r15_info\r\n" ]
}
